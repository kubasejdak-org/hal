.Linux_Coverage:
  stage: coverage
  only:
    - master
  needs: []
  artifacts:
    name: "${CI_JOB_NAME}_${CI_JOB_ID}"
    expire_in: 2 weeks
    paths:
      - ${CI_JOB_NAME}/coverage
  script:
    - mkdir ${CI_JOB_NAME}
    - cd ${CI_JOB_NAME}

    # Build application.
    - cmake .. -DPLATFORM=linux -DAPP=${App} -DCOVERAGE=ON
    - make ${MakeParams}
    - if [ ! -z "${BeforeRun}" ]; then ${BeforeRun}; sleep 1; fi
    - bin/$(basename ${App}) [unit]
    - make coverage
    - sed -i "s|SF:${CI_PROJECT_DIR}/|SF:|g" coverage/coverage.info

.Linux_ARM_GCC_Coverage:
  extends: .Linux_Coverage
  image: kubasejdak/arm-tests:latest
  tags:
    - raspberrypi
  variables:
    MakeParams: "-j 4"

.Linux_GCC_Coverage:
  extends: .Linux_Coverage
  image: kubasejdak/gcc:latest
  tags:
    - linux

EepromSet1_Coverage:
  extends: .Linux_ARM_GCC_Coverage
  tags:
    - raspberrypi
    - q39tester
    - at24cm02
  variables:
    App: "q39tester/eeprom-set1"

GpioSet1_Coverage:
  extends: .Linux_ARM_GCC_Coverage
  tags:
    - raspberrypi
    - q39tester
    - mcp23017
    - mcp23s17
  variables:
    App: "q39tester/gpio-set1"

Middleware_Coverage:
  extends: .Linux_GCC_Coverage
  variables:
    App: "middleware"

PlatformGpio_Coverage:
  extends: .Linux_ARM_GCC_Coverage
  tags:
    - raspberrypi
    - gpio
  variables:
    App: "platform-gpio"

PlatformUart_Coverage:
  extends: .Linux_ARM_GCC_Coverage
  tags:
    - raspberrypi
    - uart
  variables:
    App: "platform-uart"
    BeforeRun: "bin/daemon/run.py"

RtcSet1_Coverage:
  extends: .Linux_ARM_GCC_Coverage
  tags:
    - raspberrypi
    - q39tester
    - m41t82
  variables:
    App: "q39tester/rtc-set1"

SensorSet1_Coverage:
  extends: .Linux_ARM_GCC_Coverage
  tags:
    - raspberrypi
    - q39tester
    - sht3x-dis
  variables:
    App: "q39tester/sensor-set1"
