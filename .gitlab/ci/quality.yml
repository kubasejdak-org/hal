Clang_Format:
  stage: quality
  image: kubasejdak/clang:latest
  tags:
    - linux
    - shared
  dependencies: []
  script:
    - tools/check-clang-format.sh lib test
    - |
      git update-index -q --refresh
      git diff-index --quiet HEAD
      if [ ${?} -ne 0 ]; then
          echo "The following bad source code formatting was detected:"
          git --no-pager diff
          exit 1
      fi

.Clang_Tidy:
  stage: quality
  tags:
    - linux
    - shared
  dependencies: []
  artifacts:
    name: "${CI_JOB_NAME}_${CI_JOB_ID}"
    expire_in: 2 weeks
    paths:
      - ${CI_JOB_NAME}/errors.yml
      - ${CI_JOB_NAME}/compile_commands.json
  script:
    - mkdir ${CI_JOB_NAME}
    - cd ${CI_JOB_NAME}

    # Check build.
    - ../tools/build/${Script}.sh
    - ../tools/check-clang-tidy.sh

GpioSet1_Linux_ARM_Clang_Tidy:
  extends: .Clang_Tidy
  image: kubasejdak/arm-linux-gnueabihf-clang:latest
  variables:
    Script: "gpio-set1-linux-arm-clang-9-debug"

Middleware_Linux_Clang_Tidy:
  extends: .Clang_Tidy
  image: kubasejdak/clang:latest
  variables:
    Script: "middleware-linux-clang-9-debug"

Coverage_Total:
 stage: quality
 image: kubasejdak/gcc:latest
 tags:
   - linux
   - shared
 dependencies:
   - GpioSet1_Coverage
   - Middleware_Coverage
 artifacts:
   name: "${CI_JOB_NAME}_${CI_JOB_ID}"
   expire_in: 2 weeks
   paths:
     - ${CI_JOB_NAME}
 script:
   - mkdir ${CI_JOB_NAME}
   - cd ${CI_JOB_NAME}

   - |
     lcov -a ../GpioSet1_Coverage/coverage/coverage.info \
          -a ../Middleware_Coverage/coverage/coverage.info \
          -o coverage.info
